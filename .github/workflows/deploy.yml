name: CI/CD Pipeline to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # 3. Build the Docker image (tests run during build)
      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
          docker build -t $IMAGE_NAME .

      # 4. Push the Docker image if tests passed
      - name: Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
          docker push $IMAGE_NAME

      # 5. Deploy to EC2 instance
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            IMAGE_NAME=${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest

            # Install Docker if not present
            if ! command -v docker > /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Stop container if it exists
            if [ "$(sudo docker ps -q -f name=myapp-container)" ]; then
              echo "Stopping existing container..."
              sudo docker stop myapp-container
            fi

            # Remove container if it exists
            if [ "$(sudo docker ps -aq -f name=myapp-container)" ]; then
              echo "Removing existing container..."
              sudo docker rm myapp-container
            fi

            # Check if port 5000 is still in use
            if sudo lsof -i :5000 | grep LISTEN; then
              echo "Port 5000 is in use. Killing process..."
              sudo lsof -t -i :5000 | xargs -r sudo kill -9
            fi

            # Pull the latest image
            sudo docker pull $IMAGE_NAME

            # Run the container
            sudo docker run -d --name myapp-container -p 5000:5000 $IMAGE_NAME
